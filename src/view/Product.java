/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author lue
 */
public class Product extends javax.swing.JFrame {
    
    String user = "root";
    String password = "admin";
    String db="jdbc:mysql://localhost/ybbom";
    Connection conn =null;
    Statement st = null;
    String prodCode  = "";
    String category = "";  
    String model = "";
    String productname = "";
    /**
     * Creates new form Product
     */
    public Product() {
        
        initComponents();
        category();
        DisplayProduct();
        DisplayTable();
        modelName1();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void Query(String query){
  
      try{
          conn = DriverManager.getConnection(db,user,password);
          st = conn.createStatement();
          st.executeUpdate(query);
          //JOptionPane.showMessageDialog(null,"Successfully....");     
      }catch(Exception ex){
          JOptionPane.showOptionDialog(null,"Model Name already exist...","Warning!", JOptionPane.DEFAULT_OPTION,JOptionPane.WARNING_MESSAGE, null, new Object[]{}, null);

      }
    }
   
    private void category(){  
        try {  
            Class.forName("com.mysql.jdbc.Driver");  
            conn= DriverManager.getConnection(db,user,password);  
            Statement st = conn.createStatement();
            ResultSet r=st.executeQuery("select name from categories");
            
            while (r.next()) { 
                     jComboBox1.addItem(r.getString("name"));
            }
                conn.close();               
           } catch (Exception e) {  
                    JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);                     
       }        
    }
    
    public void DisplayTable() {      
        try {            
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(db,user,password);
            String Query = "select ProdCode, Category, ItemCode, quantity, Specification from product_raw ORDER BY ProdCode";   
            PreparedStatement pst =conn.prepareStatement(Query);
            ResultSet rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e) {    
      }
    }
    
     public void DisplayProduct() {      
        try {            
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection(db,user,password);
            String Query = "select ProdCode, Weight ,Size  from product  ORDER BY ProdCode";   
            PreparedStatement pst =conn.prepareStatement(Query);
            ResultSet rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(Exception e) {    
      }
    }
    
    
      private void modelName1() {
        
        try {  
            Class.forName("com.mysql.jdbc.Driver");  
            conn= DriverManager.getConnection(db,user,password);  
            Statement st = conn.createStatement();
            ResultSet r=st.executeQuery("SELECT ProdCode FROM product ORDER BY Id ");
            
            while (r.next()) { 
                     jComboBox3.addItem(r.getString("ProdCode"));
            }
                conn.close();               
           } catch (Exception e) {  
                    JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);                     
        }
    }
     
     private void modelName() {
        
        try {  
            Class.forName("com.mysql.jdbc.Driver");  
            conn= DriverManager.getConnection(db,user,password);  
            Statement st = conn.createStatement();
            ResultSet r=st.executeQuery("SELECT ProdCode FROM product ORDER BY Id DESC LIMIT 1");
            
            while (r.next()) { 
                     jComboBox3.addItem(r.getString("ProdCode"));
            }
                conn.close();               
           } catch (Exception e) {  
                    JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);                     
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("Product"), this, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Model Name :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Weight :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 90, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Size :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 90, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Category :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 90, 29));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Raw Material :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, 30));

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 220, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Quantity :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 90, 32));

        jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 220, 30));

        jTextField3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 220, 30));

        jTextField4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 210, 30));

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Save.png"))); // NOI18N
        jButton1.setText("Add_Product");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 90, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, -1, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 202, 720, 0));

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Save.png"))); // NOI18N
        jButton2.setText("Add_Row");
        jButton2.setActionCommand("ADD");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 470, 100, 30));

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setAutoscrolls(true);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 210, 30));

        jComboBox2.setEditable(true);
        jComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 210, 30));

        jTable2.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 500, 264));

        jLabel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product_Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(0, 0, 102))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, 340, 20));

        jLabel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Multiple_ProductRaw_Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(0, 0, 102))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 340, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Specification :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, 30));

        jTextField5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 210, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Model Name :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, 30));

        jComboBox3.setEditable(true);
        jComboBox3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 210, 30));

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit.gif"))); // NOI18N
        jButton3.setText("EDIT");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 80, 30));

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        jButton4.setText("DELETE");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 80, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 20, 500, 210));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refresh.png"))); // NOI18N
        jButton5.setText("Refresh Table");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 150, 30));

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(jTextField1.getText().length()==0 || jTextField2.getText().length() == 0 || jTextField3.getText().length()==0 )  // Checking for empty field
            
                    JOptionPane.showOptionDialog(null,"Please fill Empty Text!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);

            else{
                    prodCode = jTextField1.getText();   // Collecting the input
                    String weight = jTextField2.getText();
                    String size = jTextField3.getText();
                   
                try{
                    Query("insert into product (ProdCode,Weight,Size)"
                            + "values('"+prodCode+"','"+weight+"','"+size+"')");
                    
                    
                  jTextField1.setText("");
                  jTextField2.setText("");
                  jTextField3.setText(""); 
                    
                    jTextField4.setText("");
                    jTextField5.setText("");
                    DisplayProduct();
                  }
                    catch(Exception e){
                        e.printStackTrace();
                    }
                modelName();
            }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if( jComboBox1.getSelectedItem().toString().length()==0 || jComboBox2.getSelectedItem().toString().length()==0)  // Checking for empty field
                
                    JOptionPane.showOptionDialog(null,"Please fill Empty Text!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);
        
        else if (jTextField4.getText().length()==0 )
            
                     JOptionPane.showOptionDialog(null,"Please fill Empty Text!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);
            else{
                model = jComboBox3.getSelectedItem().toString();
                String item = jComboBox2.getSelectedItem().toString();
                String qty = jTextField4.getText();
                String spec = jTextField5.getText();
                String cat = jComboBox1.getSelectedItem().toString();
                
                try{
                    Query("insert into product_raw (ItemCode, ProdCode, Category, quantity, Specification)"
                            + "values('"+item+"','"+model+"','"+cat+"','"+qty+"','"+spec+"')");
                    
                    Query("update product set ItemCode ='"+item+"',Category='"+cat+"',Qty='"+qty+"',Specification='"+spec+"' where ProdCode='"+model+"'");
                    
                    DisplayTable();
                    
                    jTextField1.setText("");
                    jTextField2.setText("");
                    jTextField3.setText("");
                    
                  }
                    catch(Exception e){
                        e.printStackTrace();
                    }
                
            }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        jComboBox2.removeAllItems();
        category = (String) jComboBox1.getSelectedItem();
       
         try {
                Class.forName("com.mysql.jdbc.Driver");  
                conn= DriverManager.getConnection(db,user,password);  
                Statement st = conn.createStatement();
                ResultSet r=st.executeQuery("select ItemCode from rawmaterial where Category='"+category+"'");  
                while (r.next()) {     
                     jComboBox2.addItem(r.getString("ItemCode"));
            }   
                conn.close();
                
            }catch(Exception e){
                e.printStackTrace();
            }
            
    }//GEN-LAST:event_jComboBox1ActionPerformed
      
    
    
    public void productRow(String productname)
    {
       try {
                Class.forName("com.mysql.jdbc.Driver");  
                conn= DriverManager.getConnection(db,user,password);  
                Statement st = conn.createStatement();
                ResultSet r=st.executeQuery("select ProdCode, Category, ItemCode, quantity, Specification from product_raw where ProdCode='"+productname+"'"); 
                jTable2.setModel(DbUtils.resultSetToTableModel(r));
                conn.close();
                
            }catch(Exception e){
                e.printStackTrace();
            }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
       
        char vcar = evt.getKeyChar();
        if(!(Character.isDigit(vcar)|| (vcar == evt.VK_BACK_SPACE)|| (vcar == evt.VK_DELETE)))
        {
            //evt.consume();
            JOptionPane.showOptionDialog(null,"Enter Digits Only..!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        
        char vcar = evt.getKeyChar();
        if(!(Character.isDigit(vcar)|| (vcar == evt.VK_BACK_SPACE)|| (vcar == evt.VK_DELETE)))
        {
            //evt.consume();
            JOptionPane.showOptionDialog(null,"Enter Digits Only..!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        
       char vcar = evt.getKeyChar();
        if(!(Character.isDigit(vcar)|| (vcar == evt.VK_BACK_SPACE)|| (vcar == evt.VK_DELETE)))
        {
            //evt.consume();
            JOptionPane.showOptionDialog(null,"Enter Digits Only..!!","Alert!", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, new Object[]{}, null);
        }
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
//        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
//        //productId=model.getValueAt(jTable2.getSelectedRow(), 0).toString();
//        jTextField1.setText(model.getValueAt(jTable2.getSelectedRow(), 1).toString());
//        jTextField2.setText(model.getValueAt(jTable2.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{ 
                //ystem.out.println("------"+id+"   "+jTextField1.getText());
                Query("update product set ProdCode = '"+jTextField1.getText()+"',Weight = '"+jTextField2.getText()+"', Size = '"+jTextField3.getText()+"'  where ProdCode ='"+productname+"'"); 
                DisplayProduct();
                  jTextField1.setText("");
                  jTextField2.setText("");
                  jTextField3.setText("");                
                
        } 
            catch(Exception ex){
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{ 
                Query("delete from product where ProdCode = '"+productname+"'");
                Query("delete from product_raw where ProdCode = '"+productname+"'"); 
                DisplayProduct();
                DisplayTable();
               } catch(Exception ex)
                {
                    }
                jTextField1.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
         productname =model.getValueAt(jTable1.getSelectedRow(), 0).toString();
        
        jTextField1.setText(model.getValueAt(jTable1.getSelectedRow(), 0).toString());
        jTextField2.setText(model.getValueAt(jTable1.getSelectedRow(), 1).toString());
        jTextField3.setText(model.getValueAt(jTable1.getSelectedRow(), 2).toString());
        
        productRow(productname);
        
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DisplayTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
